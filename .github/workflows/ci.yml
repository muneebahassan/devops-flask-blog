name: CI/CD Pipelines

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  # Job 1: Linting and Testing
  lint_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: | 
          pip install -r app/requirements.txt

      - name: Run Linting (flake8)
        run: |
          pip install flake8
          flake8 app/

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/app" >> $GITHUB_ENV

      - name: Run Tests (pytest)
        run: |
          pip install pytest
          pytest --maxfail=1 --disable-warnings -q

  # Job 2: Build and Push Docker Image to Docker Hub
  build_and_push:
    runs-on: ubuntu-latest
    needs: lint_and_test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -f Dockerfile -t neebahassan/devops-flask-blog:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push neebahassan/devops-flask-blog:latest

  # Job 3: Adding Infrastructure (Terraform)
  terraform_infra:
    runs-on: ubuntu-latest
    needs: build_and_push

    defaults:
      run:
        working-directory: infra  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7 

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_public_key: ${{ secrets.PUBLIC_KEY_CONTENT }}
          TF_VAR_ec2_ssh_private_key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: terraform apply -auto-approve
